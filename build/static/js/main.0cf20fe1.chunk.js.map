{"version":3,"sources":["apiFolder/api_urls.js","apiFolder/urls/index.js","Components/TabComponent/URLComponent/urls.js","apiFolder/tags/index.js","Components/TabComponent/TagsComponent/tags.js","Components/TabComponent/tabComponent.js","Components/main.js","App.js","reportWebVitals.js","index.js"],"names":["host","versions","models","urls","create_url","get_urls","update_url","delete_url","delete_all_urls","tags","create_tag","get_tags","update_tag","delete_tag","delete_all_tags","Object","keys","map","key","apis","console","log","getURLS","body","setUpdateURLS","axios","get","then","res","data","forEach","element","index","catch","err","createURL","values","afterFinish","post","updateURL","newURL","afterUpdateURL","_id","put","url","deleteURL","afterDelURL","delete","id","deleteAllURL","selectedIDS","afterDelSelecteURLS","fetchUrl","eachSelectedId","promises","Promise","all","responses","deletedIds","push","Paragraph","Input","Search","Typography","URLS","props","setUpdateUrls","Form","useForm","form","useState","tooltipText","setTooltipText","selectedUrls","setSelectedUrls","title","setTitle","rowSelection","onChange","findIndex","obj","duplicateDataSource","updateURLAPI","filter","columns","dataIndex","render","text","record","style","width","ellipsis","editable","tooltip","type","onClick","window","navigator","clipboard","writeText","setTimeout","ghost","open","danger","isModalVisible","setIsModalVisible","handleOk","length","newUrlsArray","onSuccessNotification","onReset","resetFields","notification","success","message","description","includes","delSelectedURLS","sel_urls","convertSelectedIndexToIDS","onSearch","value","target","dataSource","eachObject","toLowerCase","bordered","scroll","y","marginLeft","placeholder","enterButton","allowClear","disabled","visible","onOk","onCancel","footer","name","labelCol","span","wrapperCol","onFinish","onFinishFailed","errorInfo","autoComplete","Item","label","rules","required","offset","htmlType","getTAGS","setUpdateTAGS","createTAG","updateTAG","newTAG","afterUpdateTAG","deleteTAG","afterDelTAG","deleteAllTAG","afterDelSelectedTAGS","Option","Select","TAGS","setUpdateTags","selectedTags","setSelectedTags","updateTAGAPI","delSelectedTAGS","sel_tags","maxTagCount","mode","defaultValue","eachUrl","showModal","newTagsArray","e","TabPane","Tabs","tabComponent","methods","tabHeading","heading","color","fontWeight","fontSize","defaultActiveKey","centered","size","tab","Header","Layout","Content","Main","Sider","Footer","newArray","setState","state","urlsData","tagsData","body_1","this","body_2","initialize","className","position","zIndex","marginTop","padding","margin","minHeight","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0cf20fe1.chunk.js","sourcesContent":["const http = \"http\";\r\nconst localhost = \"localhost\";\r\n\r\nconst port = 3005;\r\nconst host = `${http}://${localhost}:${port}`;\r\n// const host = \"https://important-urls.herokuapp.com\"\r\n\r\nconst versions = {\r\n  first_version: `/v1/api`,\r\n};\r\nconst models = {\r\n  urls: \"/u\",\r\n  tags: \"/t\",\r\n};\r\nvar urls = {\r\n  create_url: \"/post\",\r\n  get_urls: \"/get\",\r\n  update_url: \"/put\",\r\n  delete_url: \"/delete\",\r\n  delete_all_urls: \"/delete_all\",\r\n};\r\n\r\nvar tags = {\r\n  create_tag: \"/post\",\r\n  get_tags: \"/get\",\r\n  update_tag: \"/put\",\r\n  delete_tag: \"/delete\",\r\n  delete_all_tags: \"/delete_all\",\r\n};\r\n\r\n//  all apis are ready for urls\r\nObject.keys(urls).map((key) => {\r\n  urls[key] = host + versions.first_version + models.urls + urls[key];\r\n});\r\n//  all apis are ready for tags\r\nObject.keys(tags).map((key) => {\r\n  tags[key] = host + versions.first_version + models.tags + tags[key];\r\n});\r\n\r\nconst apis = {\r\n  urls,\r\n  tags,\r\n};\r\nconsole.log(\"apis\", apis, tags);\r\nexport default apis;\r\n","import axios from \"axios\"\r\nimport apis from \"../api_urls\"\r\n\r\nexport const getURLS = async body => {\r\n  const { urls } = apis\r\n  const { setUpdateURLS } = body\r\n  console.log(\"body\", body)\r\n  await axios\r\n    .get(urls.get_urls)\r\n    .then(res => {\r\n      // log the response\r\n      console.log(\"get req res: \", res)\r\n      //  update the urls array\r\n      res.data.forEach((element, index) => {\r\n        element[\"key\"] = index\r\n      })\r\n      console.log(\"res.data\", res.data)\r\n      setUpdateURLS(res.data)\r\n    })\r\n    .catch(err => {\r\n      console.log(\"get req err: \", err)\r\n    })\r\n}\r\n\r\nexport const createURL = async body => {\r\n  const { urls } = apis\r\n  const { values, afterFinish } = body\r\n  await axios\r\n    .post(urls.create_url, values)\r\n    .then(res => {\r\n      //  log the response data\r\n      console.log(\"post req res: \", res)\r\n      //  udpate the state\r\n      afterFinish(res.data)\r\n    })\r\n    .catch(err => {\r\n      console.log(\"post req err: \", err)\r\n    })\r\n}\r\n\r\nexport const updateURL = async body => {\r\n  const { urls } = apis\r\n  const { newURL, afterUpdateURL } = body\r\n  const { _id } = newURL\r\n  await axios\r\n    .put(urls.update_url + \"/\" + _id, newURL)\r\n    .then(res => {\r\n      //  log the response data\r\n      console.log(\"put req res: \", res)\r\n      const { url } = res.data\r\n      //  udpate the state\r\n      afterUpdateURL(url)\r\n    })\r\n    .catch(err => {\r\n      console.log(\"put req err: \", err)\r\n    })\r\n}\r\n\r\nexport const deleteURL = async body => {\r\n  const { urls } = apis\r\n  const { _id, afterDelURL } = body\r\n  await axios\r\n    .delete(urls.delete_url + `/${_id}`)\r\n    .then(res => {\r\n      //  log the response data\r\n      console.log(\"delete req res: \", res)\r\n      const { id } = res.data\r\n      //  udpate the state\r\n      if (id) {\r\n        afterDelURL(id)\r\n      }\r\n    })\r\n    .catch(err => {\r\n      console.log(\"delete req err: \", err)\r\n    })\r\n}\r\n\r\nexport const deleteAllURL = async body => {\r\n  const { selectedIDS, afterDelSelecteURLS } = body\r\n  const { urls } = apis\r\n\r\n  const fetchUrl = async eachSelectedId =>\r\n    await axios.delete(urls.delete_url + \"/\" + eachSelectedId._id)\r\n  const promises = selectedIDS.map(fetchUrl)\r\n\r\n  let responses = await Promise.all(promises)\r\n  var deletedIds = []\r\n  responses.forEach(res => {\r\n    //    let msg = `${resp.config.url} -> ${resp.headers.server}: ${resp.status}`\r\n    const { id: _id } = res.data\r\n    deletedIds.push(_id)\r\n  })\r\n  console.log(\"deleted\", deletedIds)\r\n  afterDelSelecteURLS(deletedIds)\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Table, Space, Button, Typography, Tooltip, Modal } from \"antd\";\r\nimport { Form, Input, notification } from \"antd\";\r\nimport {\r\n  createURL,\r\n  deleteURL,\r\n  deleteAllURL,\r\n  updateURL as updateURLAPI,\r\n} from \"../../../apiFolder/urls/index\";\r\n\r\nconst { Search } = Input;\r\nconst { Paragraph } = Typography;\r\nconst URLS = (props) => {\r\n  const { urls, setUpdateUrls } = props;\r\n  const [form] = Form.useForm();\r\n\r\n  const [tooltipText, setTooltipText] = useState(\"Copy\");\r\n  const [selectedUrls, setSelectedUrls] = useState([]);\r\n  const [title, setTitle] = useState(\"\");\r\n  const rowSelection = {\r\n    selectedUrls,\r\n    onChange: setSelectedUrls,\r\n  };\r\n  const openURL = (url) => {\r\n    window.open(url, \"_blank\");\r\n  };\r\n\r\n  const afterUpdateURL = (newURL) => {\r\n    const index = urls.findIndex((obj) => obj._id === newURL._id);\r\n    const duplicateDataSource = [...urls];\r\n    duplicateDataSource[index] = newURL;\r\n    setUpdateUrls(duplicateDataSource);\r\n  };\r\n  const updateURL = (newURL) => {\r\n    const body = {\r\n      newURL,\r\n      afterUpdateURL,\r\n    };\r\n    updateURLAPI(body);\r\n  };\r\n  const afterDelURL = (_id) => {\r\n    setUpdateUrls(urls.filter((obj) => obj._id !== _id));\r\n    setSelectedUrls([]);\r\n  };\r\n  const delURL = (_id) => {\r\n    const body = {\r\n      _id,\r\n      afterDelURL,\r\n    };\r\n    deleteURL(body);\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: \"NO.\",\r\n      dataIndex: \"no\",\r\n      key: \"no\",\r\n      render: (text, record) => {\r\n        return record.key + 1;\r\n      },\r\n    },\r\n    {\r\n      title: \"TITLE\",\r\n      dataIndex: \"title\",\r\n      key: \"title\",\r\n      render: (text, record) => {\r\n        return (\r\n          <Paragraph\r\n            style={{ width: 200 }}\r\n            ellipsis\r\n            editable={{\r\n              tooltip: \"click to edit text\",\r\n              onChange: (title) =>\r\n                updateURL({\r\n                  ...record,\r\n                  title,\r\n                }),\r\n            }}\r\n          >\r\n            {text}\r\n          </Paragraph>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      title: \"URL\",\r\n      dataIndex: \"url\",\r\n      key: \"url\",\r\n      render: (text, record) => {\r\n        return (\r\n          <Paragraph\r\n            style={{ width: 200 }}\r\n            ellipsis\r\n            editable={{\r\n              tooltip: \"click to edit text\",\r\n              onChange: (url) => updateURL({ ...record, url }),\r\n            }}\r\n          >\r\n            {text}\r\n          </Paragraph>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      title: \"ACTION\",\r\n      dataIndex: \"action\",\r\n      key: \"action\",\r\n      render: (text, record) => {\r\n        return (\r\n          <Space>\r\n            <Tooltip title={tooltipText}>\r\n              <Button\r\n                type=\"primary\"\r\n                onClick={() => {\r\n                  window.navigator.clipboard.writeText(record.url);\r\n                  setTooltipText(\"Copied\");\r\n                  setTimeout(() => {\r\n                    setTooltipText(\"Copy\");\r\n                  }, 800);\r\n                }}\r\n              >\r\n                COPY\r\n              </Button>\r\n            </Tooltip>\r\n            <Tooltip title={\"Open in New Tab\"}>\r\n              <Button type=\"primary\" ghost onClick={() => openURL(record.url)}>\r\n                OPEN\r\n              </Button>\r\n            </Tooltip>\r\n            <Button type=\"primary\" danger onClick={() => delURL(record._id)}>\r\n              DELETE\r\n            </Button>\r\n          </Space>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n\r\n  const showModal = () => {\r\n    setIsModalVisible(true);\r\n  };\r\n\r\n  const handleOk = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n    onReset();\r\n  };\r\n\r\n  const afterFinish = (values) => {\r\n    console.log(\"Success:\", values);\r\n    values = { ...values, key: urls.length };\r\n    const newUrlsArray = [...urls];\r\n    newUrlsArray.push(values);\r\n    setUpdateUrls(newUrlsArray);\r\n    handleOk();\r\n    onSuccessNotification();\r\n    onReset();\r\n  };\r\n  const onFinish = (values) => {\r\n    const body = {\r\n      values,\r\n      afterFinish,\r\n    };\r\n    createURL(body);\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  const onReset = () => {\r\n    form.resetFields();\r\n  };\r\n  const onSuccessNotification = () => {\r\n    notification.success({\r\n      message: \"Notification Title\",\r\n      description: \"Url is successfully created\",\r\n    });\r\n  };\r\n  const convertSelectedIndexToIDS = () => {\r\n    const sel_urls = [];\r\n    selectedUrls.map((index) => {\r\n      const { _id } = urls[index];\r\n      sel_urls.push({ _id });\r\n    });\r\n    return sel_urls;\r\n  };\r\n\r\n  const afterDelSelecteURLS = (deletedIds) => {\r\n    setUpdateUrls(urls.filter((obj) => !deletedIds.includes(obj._id)));\r\n    setSelectedUrls([]);\r\n  };\r\n  const delSelectedURLS = () => {\r\n    const selectedIDS = convertSelectedIndexToIDS();\r\n    console.log(selectedIDS);\r\n    const body = {\r\n      selectedIDS,\r\n      afterDelSelecteURLS,\r\n    };\r\n    deleteAllURL(body);\r\n  };\r\n  const onSearch = ({ target: { value } }) => setTitle(value);\r\n\r\n  return (\r\n    <div>\r\n      <Table\r\n        dataSource={urls.filter((eachObject) =>\r\n          eachObject.title.toLowerCase().includes(title.toLowerCase())\r\n        )}\r\n        columns={columns}\r\n        bordered\r\n        rowSelection={rowSelection}\r\n        scroll={{ y: 281 }}\r\n        title={() => (\r\n          <Space style={{ marginLeft: \"70%\" }}>\r\n            <Tooltip title={\"Enter Title\"}>\r\n              <Input\r\n                placeholder=\"Enter search title!\"\r\n                onChange={onSearch}\r\n                enterButton\r\n                allowClear\r\n              />\r\n            </Tooltip>\r\n            <Tooltip title={\"Add New Url\"}>\r\n              <Button\r\n                type=\"primary\"\r\n                onClick={() => {\r\n                  showModal();\r\n                }}\r\n              >\r\n                ADD\r\n              </Button>\r\n            </Tooltip>\r\n            <Tooltip title={\"Delete selected Url\"}>\r\n              <Button\r\n                disabled={selectedUrls.length === 0}\r\n                type=\"primary\"\r\n                danger\r\n                onClick={delSelectedURLS}\r\n              >\r\n                DELETE\r\n              </Button>\r\n            </Tooltip>\r\n          </Space>\r\n        )}\r\n      />\r\n      <Modal\r\n        title=\"Create New Url\"\r\n        visible={isModalVisible}\r\n        onOk={handleOk}\r\n        onCancel={handleCancel}\r\n        footer={false}\r\n      >\r\n        <Form\r\n          form={form}\r\n          name=\"create_new_url\"\r\n          labelCol={{\r\n            span: 8,\r\n          }}\r\n          wrapperCol={{\r\n            span: 16,\r\n          }}\r\n          onFinish={onFinish}\r\n          onFinishFailed={onFinishFailed}\r\n          autoComplete=\"off\"\r\n        >\r\n          <Form.Item\r\n            label=\"TITLE\"\r\n            name=\"title\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"Please input your Title!\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            label=\"URL\"\r\n            name=\"url\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"Please input your URL!\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            wrapperCol={{\r\n              offset: 8,\r\n              span: 16,\r\n            }}\r\n          >\r\n            <Space>\r\n              <Button type=\"primary\" htmlType=\"submit\">\r\n                Create\r\n              </Button>\r\n              <Button type=\"primary\" danger onClick={onReset}>\r\n                Reset\r\n              </Button>\r\n            </Space>\r\n          </Form.Item>\r\n        </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default URLS;\r\n","import axios from \"axios\"\r\nimport apis from \"../api_urls\"\r\n\r\nexport const getTAGS = async body => {\r\n  const { tags } = apis\r\n  const { setUpdateTAGS } = body\r\n  await axios\r\n    .get(tags.get_tags)\r\n    .then(res => {\r\n      // log the response\r\n      console.log(\"before tags data : \", res)\r\n      //  update the urls array\r\n      res.data.forEach((element, index) => {\r\n        element[\"key\"] = index\r\n      })\r\n      console.log(\"after tags data\", res.data)\r\n      setUpdateTAGS(res.data)\r\n    })\r\n    .catch(err => {\r\n      console.log(\"tags data err: \", err)\r\n    })\r\n}\r\n\r\nexport const createTAG = async body => {\r\n  const { tags } = apis\r\n  const { values, afterFinish } = body\r\n  console.log(body)\r\n  await axios\r\n    .post(tags.create_tag, values)\r\n    .then(res => {\r\n      //  log the response data\r\n      console.log(\"create tag req res : \", res)\r\n      //  udpate the state\r\n      afterFinish(res.data)\r\n    })\r\n    .catch(err => {\r\n      console.log(\"create tag req err: \", err)\r\n    })\r\n}\r\n\r\nexport const updateTAG = async body => {\r\n  const { tags } = apis\r\n  const { newTAG, afterUpdateTAG } = body\r\n  const { _id } = newTAG\r\n  await axios\r\n    .put(tags.update_tag + \"/\" + _id, newTAG)\r\n    .then(res => {\r\n      //  log the response data\r\n      console.log(\"update tag req res: \", res)\r\n      const { url } = res.data\r\n      //  udpate the state\r\n      afterUpdateTAG(url)\r\n    })\r\n    .catch(err => {\r\n      console.log(\"update tag req err: \", err)\r\n    })\r\n}\r\n\r\nexport const deleteTAG = async body => {\r\n  const { tags } = apis\r\n  const { _id, afterDelTAG } = body\r\n  await axios\r\n    .delete(tags.delete_tag + `/${_id}`)\r\n    .then(res => {\r\n      //  log the response data\r\n      console.log(\"delete tag req res: \", res)\r\n      const { id } = res.data\r\n      //  udpate the state\r\n      if (id) {\r\n        afterDelTAG(id)\r\n      }\r\n    })\r\n    .catch(err => {\r\n      console.log(\"delete tag req err: \", err)\r\n    })\r\n}\r\n\r\nexport const deleteAllTAG = async body => {\r\n  const { selectedIDS, afterDelSelectedTAGS } = body\r\n  const { tags } = apis\r\n\r\n  const fetchUrl = async eachSelectedId =>\r\n    await axios.delete(tags.delete_tag + \"/\" + eachSelectedId._id)\r\n  const promises = selectedIDS.map(fetchUrl)\r\n\r\n  let responses = await Promise.all(promises)\r\n  var deletedIds = []\r\n  responses.forEach(res => {\r\n    const { id: _id } = res.data\r\n    deletedIds.push(_id)\r\n  })\r\n  console.log(\"deleted\", deletedIds)\r\n  afterDelSelectedTAGS(deletedIds)\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Table, Space, Button, Typography, Tooltip, Select, Tag } from \"antd\";\r\nimport { Modal, Form, Input, Checkbox, notification } from \"antd\";\r\nimport {\r\n  createTAG,\r\n  updateTAG as updateTAGAPI,\r\n  deleteTAG,\r\n  deleteAllTAG,\r\n} from \"../../../apiFolder/tags\";\r\nconst { Paragraph } = Typography;\r\nconst { Option } = Select;\r\n\r\nconst TAGS = (props) => {\r\n  const [form] = Form.useForm();\r\n  const { urls, tags, setUpdateTags } = props;\r\n  const [title, setTitle] = useState(\"\");\r\n\r\n  const [selectedTags, setSelectedTags] = useState([]);\r\n  const rowSelection = {\r\n    selectedTags,\r\n    onChange: setSelectedTags,\r\n  };\r\n  const openTAGUrl = (url) => {\r\n    window.open(url, \"_blank\");\r\n  };\r\n\r\n  const afterUpdateTAG = (newTAG) => {\r\n    const index = tags.findIndex((obj) => obj._id === newTAG._id);\r\n    const duplicateDataSource = [...tags];\r\n    duplicateDataSource[index] = newTAG;\r\n    setUpdateTags(duplicateDataSource);\r\n  };\r\n  const updateTAG = (newTAG) => {\r\n    const body = {\r\n      newTAG,\r\n      afterUpdateTAG,\r\n    };\r\n    updateTAGAPI(body);\r\n  };\r\n\r\n  const afterDelTAG = (_id) => {\r\n    setUpdateTags(tags.filter((obj) => obj._id !== _id));\r\n    setSelectedTags([]);\r\n  };\r\n\r\n  const delTAG = (_id) => {\r\n    const body = {\r\n      _id,\r\n      afterDelTAG,\r\n    };\r\n    deleteTAG(body);\r\n  };\r\n\r\n  const afterDelSelectedTAGS = (deletedIds) => {\r\n    setUpdateTags(tags.filter((obj) => !deletedIds.includes(obj._id)));\r\n    setSelectedTags([]);\r\n  };\r\n  const convertSelectedIndexToIDS = () => {\r\n    const sel_tags = [];\r\n    selectedTags.map((index) => {\r\n      const { _id } = tags[index];\r\n      sel_tags.push({ _id });\r\n    });\r\n    return sel_tags;\r\n  };\r\n\r\n  const delSelectedTAGS = () => {\r\n    const selectedIDS = convertSelectedIndexToIDS();\r\n    console.log(selectedIDS);\r\n    const body = {\r\n      selectedIDS,\r\n      afterDelSelectedTAGS,\r\n    };\r\n    console.log(body);\r\n    deleteAllTAG(body);\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: \"NO.\",\r\n      dataIndex: \"no\",\r\n      key: \"no\",\r\n      render: (text, record) => {\r\n        return record.key + 1;\r\n      },\r\n    },\r\n    {\r\n      title: \"TITLE\",\r\n      dataIndex: \"title\",\r\n      key: \"title\",\r\n      render: (text, record) => {\r\n        return (\r\n          <Paragraph\r\n            style={{ width: 200 }}\r\n            ellipsis\r\n            editable={{\r\n              tooltip: \"click to edit Tag Name\",\r\n              onChange: (title) =>\r\n                updateTAG({\r\n                  ...record,\r\n                  title,\r\n                }),\r\n            }}\r\n          >\r\n            {text}\r\n          </Paragraph>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      title: \"URLS\",\r\n      dataIndex: \"urls\",\r\n      key: \"urls\",\r\n      render: (text, record) => {\r\n        return (\r\n          <Select\r\n            maxTagCount={3}\r\n            mode=\"multiple\"\r\n            allowClear\r\n            style={{ width: 400 }}\r\n            placeholder=\"Please select Urls\"\r\n            defaultValue={record.urls}\r\n            onChange={(urls) =>\r\n              updateTAG({\r\n                ...record,\r\n                urls,\r\n              })\r\n            }\r\n          >\r\n            {urls.map((obj) => {\r\n              return (\r\n                <Option key={obj.key} value={obj.url}>\r\n                  {obj.title}\r\n                </Option>\r\n              );\r\n            })}\r\n          </Select>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      title: \"ACTION\",\r\n      dataIndex: \"action\",\r\n      key: \"action\",\r\n      render: (text, record) => {\r\n        return (\r\n          <Space>\r\n            <Tooltip title={\"Open in New Tab\"}>\r\n              <Button\r\n                type=\"primary\"\r\n                ghost\r\n                onClick={() => {\r\n                  record.urls.forEach((eachUrl) => {\r\n                    openTAGUrl(eachUrl);\r\n                  });\r\n                }}\r\n              >\r\n                OPEN\r\n              </Button>\r\n            </Tooltip>\r\n            <Button type=\"primary\" danger onClick={() => delTAG(record._id)}>\r\n              DELETE\r\n            </Button>\r\n          </Space>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n\r\n  const showModal = () => {\r\n    setIsModalVisible(true);\r\n  };\r\n\r\n  const handleOk = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n    onReset();\r\n  };\r\n\r\n  const afterFinish = (values) => {\r\n    console.log(\"Success:\", values);\r\n    values = { ...values, key: tags.length };\r\n    const newTagsArray = [...tags];\r\n    newTagsArray.push(values);\r\n\r\n    setUpdateTags(newTagsArray);\r\n    handleOk();\r\n    onSuccessNotification();\r\n    onReset();\r\n  };\r\n  const onFinish = (values) => {\r\n    const body = {\r\n      values,\r\n      afterFinish,\r\n    };\r\n    createTAG(body);\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  const onReset = () => {\r\n    form.resetFields();\r\n  };\r\n  const onSuccessNotification = () => {\r\n    notification.success({\r\n      message: \"Notification Title\",\r\n      description: \"Tag is successfully created\",\r\n    });\r\n  };\r\n  const onSearch = ({ target: { value } }) => setTitle(value);\r\n\r\n  return (\r\n    <div>\r\n      <Table\r\n        dataSource={tags.filter((eachObject) =>\r\n          eachObject.title.toLowerCase().includes(title.toLowerCase())\r\n        )}\r\n        columns={columns}\r\n        bordered\r\n        scroll={{ y: 281 }}\r\n        rowSelection={rowSelection}\r\n        title={() => (\r\n          <Space style={{ marginLeft: \"70%\" }}>\r\n            <Input\r\n              placeholder=\"Enter search title!\"\r\n              onChange={onSearch}\r\n              enterButton\r\n              allowClear\r\n            />\r\n\r\n            <Tooltip title={\"Add New Tag\"}>\r\n              <Button type=\"primary\" onClick={showModal}>\r\n                ADD\r\n              </Button>\r\n            </Tooltip>\r\n            <Tooltip title={\"Delete selected tags\"}>\r\n              <Button\r\n                disabled={!selectedTags.length}\r\n                type=\"primary\"\r\n                danger\r\n                onClick={delSelectedTAGS}\r\n              >\r\n                DELETE\r\n              </Button>\r\n            </Tooltip>\r\n          </Space>\r\n        )}\r\n      />\r\n      <Modal\r\n        title=\"Create New Tag\"\r\n        visible={isModalVisible}\r\n        onOk={handleOk}\r\n        onCancel={handleCancel}\r\n        footer={false}\r\n        scroll={{ y: 300 }}\r\n      >\r\n        <Form\r\n          form={form}\r\n          name=\"create_new_tag\"\r\n          labelCol={{\r\n            span: 8,\r\n          }}\r\n          wrapperCol={{\r\n            span: 16,\r\n          }}\r\n          onFinish={onFinish}\r\n          onFinishFailed={onFinishFailed}\r\n          autoComplete=\"off\"\r\n        >\r\n          <Form.Item\r\n            label=\"TITLE\"\r\n            name=\"title\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"Please input your Title!\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            label=\"URLS\"\r\n            name=\"urls\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"Please input your URLS!\",\r\n              },\r\n            ]}\r\n          >\r\n            <Select\r\n              mode=\"multiple\"\r\n              allowClear\r\n              placeholder=\"Please select Urls\"\r\n              // defaultValue={urls}\r\n              onChange={(e) => {\r\n                console.log(\"e\", e);\r\n                // updateTAGURLS(record.key, e)\r\n              }}\r\n            >\r\n              {urls.map((obj) => {\r\n                return (\r\n                  <Option key={obj.key} value={obj.url}>\r\n                    {obj.title}\r\n                  </Option>\r\n                );\r\n              })}\r\n            </Select>\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            wrapperCol={{\r\n              offset: 8,\r\n              span: 16,\r\n            }}\r\n          >\r\n            <Space>\r\n              <Button type=\"primary\" htmlType=\"submit\">\r\n                Create\r\n              </Button>\r\n              <Button type=\"primary\" danger onClick={onReset}>\r\n                Reset\r\n              </Button>\r\n            </Space>\r\n          </Form.Item>\r\n        </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TAGS;\r\n","import React from \"react\";\r\nimport { Tabs } from \"antd\";\r\n\r\nimport URLComponent from \"./URLComponent/urls\";\r\nimport TAGSComponent from \"./TagsComponent/tags\";\r\n\r\nconst { TabPane } = Tabs;\r\nconst tabComponent = (props) => {\r\n  const { urls, tags } = props.data;\r\n  const { setUpdateUrls, setUpdateTags } = props.methods;\r\n  const tabHeading = (heading) => {\r\n    return (\r\n      <span style={{ color: \"black\", fontWeight: \"bold\", fontSize: 20 }}>\r\n        {heading}\r\n      </span>\r\n    );\r\n  };\r\n  return (\r\n    <Tabs defaultActiveKey=\"1\" centered size=\"large\">\r\n      <TabPane tab={tabHeading(\"URLS\")} key=\"1\">\r\n        <URLComponent urls={urls} setUpdateUrls={setUpdateUrls} />\r\n      </TabPane>\r\n      <TabPane tab={tabHeading(\"TAGS\")} key=\"2\">\r\n        <TAGSComponent tags={tags} urls={urls} setUpdateTags={setUpdateTags} />\r\n      </TabPane>\r\n    </Tabs>\r\n  );\r\n};\r\n\r\nexport default tabComponent;\r\n","import React, { Component } from \"react\";\r\nimport TabComponent from \"./TabComponent/tabComponent\";\r\nimport { getURLS } from \"../apiFolder/urls\";\r\nimport { getTAGS } from \"../apiFolder/tags\";\r\nimport { Layout } from \"antd\";\r\n\r\nimport urlsData from \"./urls.json\";\r\nimport tagsData from \"./tags.json\";\r\nimport \"./styles.css\";\r\n\r\nconst { Header, Content, Sider, Footer } = Layout;\r\n\r\nclass Main extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      urls: [] || urlsData.urls,\r\n      tags: [] || tagsData.tags,\r\n    };\r\n  }\r\n\r\n  initialize() {\r\n    const body_1 = {\r\n      setUpdateURLS: this.setUpdateURLS,\r\n    };\r\n    getURLS(body_1);\r\n\r\n    const body_2 = {\r\n      setUpdateTAGS: this.setUpdateTAGS,\r\n    };\r\n    getTAGS(body_2);\r\n  }\r\n  componentDidMount() {\r\n    this.initialize();\r\n  }\r\n  setUpdateURLS = (newArray) => {\r\n    this.setState({ urls: newArray });\r\n  };\r\n  setUpdateTAGS = (newArray) => {\r\n    this.setState({ tags: newArray });\r\n  };\r\n\r\n  render() {\r\n    const { urls, tags } = this.state;\r\n    return (\r\n      <>\r\n        <div>\r\n          <Layout>\r\n            <Header\r\n              className=\"header\"\r\n              style={{\r\n                position: \"fixed\",\r\n                zIndex: 1,\r\n                width: \"100%\",\r\n              }}\r\n            >\r\n              <div\r\n                className=\"logo\"\r\n                style={{ color: \"white\", fontSize: \"20px\" }}\r\n              >\r\n                MY IMPORTANT URLS\r\n              </div>\r\n            </Header>\r\n            <Layout style={{ marginTop: \"40px\" }}>\r\n              <Layout\r\n                style={{\r\n                  padding: \"0 24px 24px\",\r\n                }}\r\n              >\r\n                <Content\r\n                  style={{\r\n                    padding: 24,\r\n                    margin: 0,\r\n                    minHeight: 200,\r\n                  }}\r\n                >\r\n                  <TabComponent\r\n                    data={{ urls: urls, tags: tags }}\r\n                    methods={{\r\n                      setUpdateUrls: this.setUpdateURLS,\r\n                      setUpdateTags: this.setUpdateTAGS,\r\n                    }}\r\n                  />\r\n                </Content>\r\n              </Layout>\r\n            </Layout>\r\n          </Layout>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default Main;\r\n","import Main from \"./Components/main\"\n\nfunction App() {\n  return <Main />\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'antd/dist/antd.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}